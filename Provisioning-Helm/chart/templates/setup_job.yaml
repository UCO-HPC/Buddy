apiVersion: batch/v1
kind: Job
metadata:
  name: setup
  namespace: {{ .Release.Namespace }}
spec:
  completions: 1
  template:
    metadata:
      name: setup
    spec:
      volumes:
      - name: {{ .Values.postgres.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.name }}
      containers:
      # - name: setup-db
      #   image: {{ .Values.postgres.image }}
      #   env:
      #   - name: POSTGRES_USER
      #     valueFrom:
      #       secretKeyRef:
      #         name: "db-user"
      #         key: "username"
      #   - name: POSTGRES_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: "db-user-pass"
      #         key: "password"
      #   - name: POSTGRES_DATABASE
      #     value: {{ .Values.postgres.db_name }}
      #   - name: PGDATA
      #     value: "/var/lib/postgresql/data/pgdata"
      #   ports:
      #   - containerPort: {{ .Values.setup.db.port }}
      #   volumeMounts:
      #   - mountPath: "/var/lib/postgresql/data"
      #     name: {{ .Values.postgres.name }}
      - name: setup
        image: {{ .Values.app.image }}
        command: ["sleep"]
        args: ["infinity"]
        env:
        - name: RAILS_ENV
          value: "production"
        - name: SEED_ADMIN_PASSWORD
          value: "changeme"
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: "secret-key-base"
              key: "secret-key-base"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: "db-url"
              key: "url"
        # startupProbe:
        #   tcpSocket:
        #     port: {{ .Values.postgres.port }}
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
      restartPolicy: Never